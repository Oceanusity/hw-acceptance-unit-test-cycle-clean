c
n
q
flash
n
m
'Alien' has no director info
flash[:warning]
n
page.should have_content(text)
page
n
text
c
result
n
page.should have_content(text)
n
page
text
c
n
c
q
@movie[:director].empty?
@movie[:director]
@movie[director]
@movie[:=>director]
@movie.has_attribute? :director
@movie
c
@movie
c
n
c
q
c
q
c
q
args
l
ll
exception
n
flash
flasj
n
c
q
e
n
director_movies_path(director)
director_movies_path
director
q
y
q
c
q
exception
n
@movies
n
q
@movie
@movies
n
c
q
n
Movie.where(:director => @movie.director)
@movie
@mvoies
n
q
exception
n
l
request
n
@movies
movies
@mvies
n
q
c
q
c
n
report
n
step_result
n
result
n
c
q
error
n
flash
n
e
payload
n
 Movie.where(:director => @movie.director)
@movie
@mvoe
movie
@movie = Movie.find params[:id]
c
page_name
c
q
Movie.where(:director => @movie.director).all
Movie.where(:director => @movie.director)
Movie.where(:rating => "PG")
Movie.find_by :rating => "PG"
Movie
Movie.find_by :director => @movie.director
Movie.find_by {:director => @movie.director}
Movie.find_by :director, @movie.director
directorMovie
@movie.director
Movie.where(:director, @movie.director).to_a
@movie.director
Movie.where(:director, @movie.director)
Movie.where(:director, @movie.director).all
Movie.where(:director, @movie.director)
Movie.all
Movie.ll
Movie
@movie.director
Movie.where(:director, @movie.director).all
@movie = Movie.find params[:id]
find params[:id]
@movie = find params[:id]
Movie.find params[:id]
params
l
movie
params
Movie.where(:director, params[:director])
Movie.where(:director, params[:director]).all
Movie
Movies
c
q
c
q
c
q
result
n
c
q
c
director
n
page_name
c
q
c
n
move_title
n
c
page_name
page_name =~ /^the Similar Movie page for "(.+)"/
page_name
l
n
page_name
c
page_name
c
n
q
page_name
current_path.respond_to? :should
current_url
c
q
Movie.where(:director, params[:director]).all
Movie.where(:director: params[:director]).all
Movie.find_by(:all, {:rating => "PG"})
Movie.find_by(:all, :conditions => {:rating => "PG"})
Movie.find(:all, :conditions => {:rating => "PG"})
Movie.where(:rating => "PG")
Movie.where(:rating => "PG").all
Movie.where(:rating => "PG").to_a
Movie
Movie.where(:ratings => "PG")
Movie.where(:ratings => "PG").all
Movie.where(:ratings => "PG").to_a
Movie.where(:ratings => "PG")
Movie.find(:all)
Movie.find
Movie.find(:all, :conditions => {:rating => "PG"})
Movie.find(:all, :conditions => {rating: "PG"})
Movie.find('all', :rating => "R")
Movie.find(:rating => "R")
Movie.find_by(:rating => "R")
Movie.find_by("all", :rating => "R")
Movie.find_by_attributes rating: "R"
Movie.find_by rating: "PG"
Movie.find_by rating: "R"
Movie.find_by rating "R"
params[:id]
param[:id]
Movie.find "R"
Movie.find params[:id]
params
Movie.all
Movie
c
link
c
r
n
result
n
r
click_link
s
link
q
c
n
movie_id
n
page_name
movie_title
n
page_name
c
q
page_name =~  /^the details page for "(.+)"/
page_name =~ /the details page for "(\W+)"/
page_name =~ /the details page for "(.+)"/
page_name
page_name =~ /the details page for "(\w+)"/
page_name =~ \the details page for "(\w+)"\
page_name =~ the details page for "(\w+)"
page_name
n
page_name
c
page_name
q
c
result
n
q
Movie.find_by title: movie_title[:id]
Movie.find_by title: movie_title [:id]
